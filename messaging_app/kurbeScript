#!/bin/bash

# Script: kurbeScript-mac
# Purpose: Set up a local Kubernetes cluster using Minikube, verify its status, and list pods on macOS.

set -e

# Function to check if a command exists
command_exists () {
  command -v "$1" >/dev/null 2>&1
}

# Check and install Docker Desktop
echo "Checking for Docker Desktop..."
if ! command_exists docker; then
    echo "Docker Desktop is not installed. Please install it from https://www.docker.com/products/docker-desktop/"
    echo "This script will exit. Please run it again after installing and starting Docker Desktop."
    exit 1
else
    echo "Docker is already installed."
    # Ensure Docker is running.
    # In macOS, 'docker info' will fail if the daemon isn't running.
    if ! docker info &> /dev/null; then
        echo "Docker is not running. Please start Docker Desktop and run this script again."
        exit 1
    fi
    echo "Docker is running."
fi

# Check and install Minikube
echo "Checking for Minikube..."
if ! command_exists minikube; then
    echo "Minikube is not installed. Installing with Homebrew..."
    brew install minikube
    echo "Minikube installed successfully."
else
    echo "Minikube is already installed."
fi

# Check and install kubectl
echo "Checking for kubectl..."
if ! command_exists kubectl; then
    echo "kubectl is not installed. Installing with Homebrew..."
    brew install kubectl
    echo "kubectl installed successfully."
else
    echo "kubectl is already installed."
fi

# Start Minikube cluster using the Docker driver
echo "Starting Minikube cluster..."
minikube start --driver=docker

# Verify cluster status
echo "Verifying Kubernetes cluster status..."
kubectl cluster-info

# Retrieve available pods
echo "Listing all pods in the cluster..."
kubectl get pods --all-namespaces

# Exit with success status
exit 0