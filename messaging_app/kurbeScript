#!/bin/bash

<<<<<<< HEAD
# Script: kurbeScript
# Purpose: Set up a local Kubernetes cluster using Minikube, verify its status, and list pods.

# Check if Docker is installed
if ! command -v docker &> /dev/null; then
    echo "Docker is not installed. Installing docker-ce..."
    sudo apt update
    sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    sudo apt update
    sudo apt install -y docker-ce docker-ce-cli containerd.io
    sudo systemctl start docker
    sudo systemctl enable docker
    sudo usermod -aG docker $USER
    echo "Docker installed. Please run 'newgrp docker' or log out and back in to apply group changes."
else
    echo "Docker is already installed."
fi

# Check if Minikube is installed
if ! command -v minikube &> /dev/null; then
    echo "Minikube is not installed. Installing Minikube..."
    curl -LO https://storage.googleapis.com/minikube/releases/latest/minik justices-linux-amd64
    sudo install minikube-linux-amd64 /usr/local/bin/minikube
    rm minikube-linux-amd64
    echo "Minikube installed successfully."
else
    echo "Minikube is already installed."
fi

# Check if kubectl is installed
if ! command -v kubectl &> /dev/null; then
    echo "kubectl is not installed. Installing kubectl..."
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    chmod +x kubectl
    sudo mv kubectl /usr/local/bin/
    echo "kubectl installed successfully."
else
    echo "kubectl is already installed."
fi

# Start Minikube cluster
echo "Starting Minikube cluster..."
minikube start --driver=docker

# Verify cluster status
echo "Verifying Kubernetes cluster status..."
kubectl cluster-info

# Retrieve available pods
echo "Listing all pods in the cluster..."
kubectl get pods --all-namespaces

# Exit with success status
exit 0
=======
set -e

command_exists() {
    command -v "$1" >/dev/null 2>&1
}

if ! command_exists minikube; then
    echo "Error: Minikube is not installed. Please install Minikube first."
    echo "On Linux: curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && sudo install minikube-linux-amd64 /usr/local/bin/minikube"
    echo "On macOS: brew install minikube"
    exit 1
fi

if ! command_exists kubectl; then
    echo "Error: kubectl is not installed. Please install kubectl first."
    echo "On Linux: curl -LO https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/"
    echo "On macOS: brew install kubectl"
    exit 1
fi

if ! command_exists docker; then
    echo "Error: Docker is not installed. Please install Docker first."
    echo "Follow instructions at https://docs.docker.com/get-docker/"
    exit 1
fi

echo "Starting Minikube cluster..."
minikube start --driver=docker

echo "Verifying cluster status..."
kubectl cluster-info

echo "Retrieving available pods..."
kubectl get pods --all-namespaces

echo "Kubernetes cluster is running, and pod information has been retrieved."
>>>>>>> ece027ceb1cbebd50e40dab54b3fd419961a2f97
