# Ingress Configuration for Django Messaging App
# File: messaging_app/ingress.yaml
# Repository: alx-backend-python

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: django-messaging-ingress
  labels:
    app: django-messaging-app
  annotations:
    # Use nginx ingress controller
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    # Enable CORS for API endpoints
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    # SSL configuration (optional)
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # Rate limiting (optional)
    nginx.ingress.kubernetes.io/limit-rps: "100"
    # Upload size limit
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    # Connection timeout
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
spec:
  rules:
  # Primary domain configuration
  - host: django-messaging.local
    http:
      paths:
      # Django API routes
      - path: /api/(.*)
        pathType: Prefix
        backend:
          service:
            name: django-messaging-service
            port:
              number: 80
      # Django Admin interface
      - path: /admin/(.*)
        pathType: Prefix
        backend:
          service:
            name: django-messaging-service
            port:
              number: 80
      # Static files
      - path: /static/(.*)
        pathType: Prefix
        backend:
          service:
            name: django-messaging-service
            port:
              number: 80
      # Media files
      - path: /media/(.*)
        pathType: Prefix
        backend:
          service:
            name: django-messaging-service
            port:
              number: 80
      # Health check endpoint
      - path: /health/(.*)
        pathType: Prefix
        backend:
          service:
            name: django-messaging-service
            port:
              number: 80
      # Root path - Django app homepage
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: django-messaging-service
            port:
              number: 80
  
  # Alternative domain for API-only access
  - host: api.django-messaging.local
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: django-messaging-service
            port:
              number: 80

  # Wildcard subdomain support (optional)
  - host: "*.django-messaging.local"
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: django-messaging-service
            port:
              number: 80

---
# Additional Ingress for development/testing with localhost
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: django-messaging-localhost-ingress
  labels:
    app: django-messaging-app
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: localhost
    http:
      paths:
      # API endpoints with /api prefix
      - path: /api/(.*)
        pathType: Prefix
        backend:
          service:
            name: django-messaging-service
            port:
              number: 80
      # Admin interface
      - path: /admin/(.*)
        pathType: Prefix
        backend:
          service:
            name: django-messaging-service
            port:
              number: 80
      # Root path
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: django-messaging-service
            port:
              number: 80

---
# TLS/SSL Configuration (optional - for HTTPS)
# Uncomment and configure if you have SSL certificates
# apiVersion: v1
# kind: Secret
# metadata:
#   name: django-messaging-tls
#   namespace: default
# type: kubernetes.io/tls
# data:
#   tls.crt: # base64 encoded certificate
#   tls.key: # base64 encoded private key
# 
# ---
# # Ingress with TLS enabled
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: django-messaging-https-ingress
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/ssl-redirect: "true"
# spec:
#   tls:
#   - hosts:
#     - django-messaging.local
#     - api.django-messaging.local
#     secretName: django-messaging-tls
#   rules:
#   - host: django-messaging.local
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: django-messaging-service
#             port:
#               number: 80